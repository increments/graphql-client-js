{"version":3,"file":"index.es5.js","sources":["../src/uniqId.ts","../src/sendRequest.ts","../src/GraphQLClient.ts"],"sourcesContent":["// Generate unique variable name\nexport const uniqId = (() => {\n  let counter = 0\n  return (name: string): string => `${name}${counter++}`\n})()\n","import { uniqId } from \"./uniqId\"\n\nexport type Handler = (\n  query: string,\n  variables: Variables,\n  resolve: ResolveCallback,\n  reject: RejectCallback,\n) => void\nexport interface Error {\n  message: string\n  fields?: string[]\n}\nexport type ResolveCallback = (resp: { data?: any; errors?: Error[] }) => void\nexport type RejectCallback = (message: string) => void\nexport type OperationName = \"query\" | \"mutation\"\n\nexport interface VariableDecls {\n  [name: string]: {\n    type: string\n    value: any\n  }\n}\n\nexport interface Variables {\n  [name: string]: any\n}\n\nexport interface RequestParams {\n  [alias: string]: {\n    query: string\n    decls: VariableDecls\n    resolve: (value?: any | PromiseLike<any> | undefined) => void\n    reject: (reason?: any) => void\n  }\n}\n\nconst SELECTION_DELIMITER = /\\s|\\(|{/\n\nconst buildQueryAndVariables = (\n  name: OperationName,\n  params: RequestParams,\n): { query: string; variables: Variables } => {\n  const queries: string[] = []\n  const variableDefinitions: string[] = []\n  const variables: Variables = {}\n\n  Object.keys(params).forEach(aliasName => {\n    const param = params[aliasName]\n    let query = param.query\n    Object.keys(param.decls)\n      .sort((a, b) => b.length - a.length) // Sort by length in descending order\n      .forEach(varName => {\n        const uniqName = uniqId(varName)\n        query = query.replace(`$${varName}`, `$${uniqName}`)\n        variableDefinitions.push(`$${uniqName}: ${param.decls[varName].type}`)\n        variables[uniqName] = param.decls[varName].value\n      })\n    queries.push(`${aliasName}:${query}`)\n  })\n\n  const defs = variableDefinitions.length\n    ? `(${variableDefinitions.join(\",\")})`\n    : \"\"\n  const query = `${name}${defs}{\\n${queries.join(\"\\n\")}\\n}`\n  return { query, variables }\n}\n\nconst createResolveCallback = (params: RequestParams): ResolveCallback => ({\n  data,\n  errors,\n}) => {\n  const payloads: { [name: string]: { data?: any; errors?: Error[] } } = {}\n  const nameMap: { [aliasName: string]: string } = {}\n\n  if (data) {\n    Object.keys(data).forEach(aliasName => {\n      const param = params[aliasName]\n      const originalName = param.query.split(SELECTION_DELIMITER, 1)[0]\n      payloads[aliasName] = {\n        data: {\n          [originalName]: data[aliasName],\n        },\n      }\n      nameMap[aliasName] = originalName\n    })\n  }\n  if (errors) {\n    errors.forEach(error => {\n      if (error.fields && error.fields.length) {\n        const field = error.fields[0]\n        if (!nameMap[field]) {\n          return // Unknown field\n        }\n        if (!payloads[field]) {\n          payloads[field] = {\n            errors: [],\n          }\n        }\n        if (!payloads[field].errors) {\n          payloads[field].errors = []\n        }\n        ;(payloads[field].errors as Error[]).push({\n          message: error.message,\n          fields: [nameMap[field]].concat(error.fields.slice(1)),\n        })\n      }\n    })\n  }\n  Object.keys(payloads).forEach(name => {\n    if (params[name]) {\n      params[name].resolve(payloads[name])\n    }\n  })\n}\n\nconst createRejectCallback = (params: RequestParams): RejectCallback => (\n  ...args: any[]\n) => {\n  Object.keys(params).forEach(aliasName => {\n    params[aliasName].reject(...args)\n  })\n}\n\nexport const sendRequest = (\n  name: OperationName,\n  params: RequestParams,\n  handler: Handler,\n): void => {\n  const { query, variables } = buildQueryAndVariables(name, params)\n  handler(\n    query,\n    variables,\n    createResolveCallback(params),\n    createRejectCallback(params),\n  )\n}\n","import {\n  Error,\n  Handler,\n  OperationName,\n  RequestParams,\n  sendRequest,\n  VariableDecls,\n} from \"./sendRequest\"\nimport { uniqId } from \"./uniqId\"\n\nexport class GraphQLClient {\n  private wait: number\n  private handle: Handler\n  private buffers: { [operation in OperationName]: RequestParams } = {\n    query: {},\n    mutation: {},\n  }\n  private timerIds: { [operation in OperationName]: number | null } = {\n    query: null,\n    mutation: null,\n  }\n\n  constructor(options: { wait?: number; handle: Handler }) {\n    this.wait = options.wait == null ? 50 : options.wait\n    this.handle = options.handle\n  }\n\n  public query<T>(\n    query: string,\n    decls: VariableDecls = {},\n  ): Promise<{ data?: T; errors?: Error[] }> {\n    return this.buffer(\"query\", query, decls)\n  }\n\n  public mutation<T>(\n    query: string,\n    decls: VariableDecls = {},\n  ): Promise<{ data?: T; errors?: Error[] }> {\n    return this.buffer(\"mutation\", query, decls)\n  }\n\n  private buffer<T>(\n    name: OperationName,\n    query: string,\n    decls: VariableDecls,\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.buffers[name][uniqId(\"alias\")] = {\n        query,\n        decls,\n        resolve,\n        reject,\n      }\n      if (!this.timerIds[name]) {\n        this.timerIds[name] = setTimeout(() => {\n          this.flush(name)\n        }, this.wait)\n      }\n    })\n  }\n\n  private flush(name: OperationName): void {\n    sendRequest(name, this.buffers[name], this.handle)\n    this.buffers[name] = {}\n    this.timerIds[name] = null\n  }\n}\n"],"names":[],"mappings":"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"}