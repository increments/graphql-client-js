var GraphQLClient=function(e){"use strict";const t=(()=>{let e=0;return t=>`${t}${e++}`})(),r=/\s|\(|{/,s=(e,s,i)=>{const{query:n,variables:a}=((e,r)=>{const s=[],i=[],n={};return Object.keys(r).forEach(e=>{const a=r[e];let h=a.query;Object.keys(a.decls).sort((e,t)=>t.length-e.length).forEach(e=>{const r=t(e);h=h.replace(`$${e}`,`$${r}`),i.push(`$${r}: ${a.decls[e].type}`),n[r]=a.decls[e].value}),s.push(`${e}:${h}`)}),{query:`${e}${i.length?`(${i.join(",")})`:""}{\n${s.join("\n")}\n}`,variables:n}})(e,s);i(n,a,(e=>({data:t,errors:s})=>{const i={},n={};t&&Object.keys(t).forEach(s=>{const a=e[s].query.split(r,1)[0];i[s]={data:{[a]:t[s]}},n[s]=a}),s&&s.forEach(e=>{if(e.path&&e.path.length){const t=e.path[0];if(!n[t])return;i[t]||(i[t]={errors:[]}),i[t].errors||(i[t].errors=[]),i[t].errors.push(Object.assign({},e,{path:[n[t]].concat(e.path.slice(1))}))}}),Object.keys(i).forEach(t=>{e[t]&&e[t].resolve(i[t])}),Object.keys(e).forEach(t=>{e[t].resolve({})})})(s),(e=>(...t)=>{Object.keys(e).forEach(r=>{e[r].reject(...t)})})(s))};return e.GraphQLClient=class{constructor(e){this.buffers={query:{},mutation:{}},this.timerIds={query:null,mutation:null},this.wait=null==e.wait?50:e.wait,this.handle=e.handle}query(e,t={}){return this.buffer("query",e,t)}mutation(e,t={}){return this.buffer("mutation",e,t)}buffer(e,r,s){return new Promise((i,n)=>{this.buffers[e][t("alias")]={query:r,decls:s,resolve:i,reject:n},this.timerIds[e]||(this.timerIds[e]=setTimeout(()=>{this.flush(e)},this.wait))})}flush(e){s(e,this.buffers[e],this.handle),this.buffers[e]={},this.timerIds[e]=null}},e}({});
