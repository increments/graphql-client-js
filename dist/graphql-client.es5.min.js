var GraphQLClient=function(t){"use strict";const e=(()=>{let t=0;return e=>`${e}${t++}`})(),r=/\s|\(|{/,s=(t,s,i)=>{const{query:n,variables:a}=((t,r)=>{const s=[],i=[],n={};return Object.keys(r).forEach(t=>{const a=r[t];let h=a.query;Object.keys(a.decls).sort((t,e)=>e.length-t.length).forEach(t=>{const r=e(t);h=h.replace(`$${t}`,`$${r}`),i.push(`$${r}: ${a.decls[t].type}`),n[r]=a.decls[t].value}),s.push(`${t}:${h}`)}),{query:`${t}${i.length?`(${i.join(",")})`:""}{\n${s.join("\n")}\n}`,variables:n}})(t,s);i(n,a,(t=>({data:e,errors:s})=>{const i={},n={};e&&Object.keys(e).forEach(s=>{const a=t[s].query.split(r,1)[0];i[s]={data:{[a]:e[s]}},n[s]=a}),s&&s.forEach(t=>{if(t.path&&t.path.length){const e=t.path[0];if(!n[e])return;i[e]||(i[e]={errors:[]}),i[e].errors||(i[e].errors=[]),i[e].errors.push(Object.assign({},t,{path:[n[e]].concat(t.path.slice(1))}))}}),Object.keys(i).forEach(e=>{t[e]&&t[e].resolve(i[e])}),Object.keys(t).forEach(e=>{t[e].resolve({})})})(s),(t=>(...e)=>{Object.keys(t).forEach(r=>{t[r].reject(...e)})})(s))};return t.GraphQLClient=class{constructor(t){this.buffers={query:{},mutation:{}},this.timerIds={query:null,mutation:null},this.wait=null==t.wait?50:t.wait,this.handle=t.handle}query(t,e={}){return this.buffer("query",t.trim(),e)}mutation(t,e={}){return this.buffer("mutation",t.trim(),e)}buffer(t,r,s){return new Promise((i,n)=>{this.buffers[t][e("alias")]={query:r,decls:s,resolve:i,reject:n},this.timerIds[t]||(this.timerIds[t]=setTimeout(()=>{this.flush(t)},this.wait))})}flush(t){s(t,this.buffers[t],this.handle),this.buffers[t]={},this.timerIds[t]=null}},t}({});
