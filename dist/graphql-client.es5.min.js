var GraphQLClient=function(e){"use strict";const t=(()=>{let e=0;return t=>`${t}${e++}`})(),r=/\s|\(|{/,s=(e,s,a)=>{const{query:i,variables:n}=((e,r)=>{const s=[],a=[],i={};return Object.keys(r).forEach(e=>{const n=r[e];let h=n.query;Object.keys(n.decls).sort((e,t)=>t.length-e.length).forEach(e=>{const r=t(e);h=h.replace(`$${e}`,`$${r}`),a.push(`$${r}: ${n.decls[e].type}`),i[r]=n.decls[e].value}),s.push(`${e}:${h}`)}),{query:`${e}${a.length?`(${a.join(",")})`:""}{\n${s.join("\n")}\n}`,variables:i}})(e,s);a(i,n,(e=>({data:t,errors:s})=>{const a={},i={};t&&Object.keys(t).forEach(s=>{const n=e[s].query.split(r,1)[0];a[s]={data:{[n]:t[s]}},i[s]=n}),s&&s.forEach(e=>{if(e.path&&e.path.length){const t=e.path[0];if(!i[t])return;a[t]||(a[t]={errors:[]}),a[t].errors||(a[t].errors=[]),a[t].errors.push({message:e.message,path:[i[t]].concat(e.path.slice(1))})}}),Object.keys(a).forEach(t=>{e[t]&&e[t].resolve(a[t])}),Object.keys(e).forEach(t=>{e[t].resolve({})})})(s),(e=>(...t)=>{Object.keys(e).forEach(r=>{e[r].reject(...t)})})(s))};return e.GraphQLClient=class{constructor(e){this.buffers={query:{},mutation:{}},this.timerIds={query:null,mutation:null},this.wait=null==e.wait?50:e.wait,this.handle=e.handle}query(e,t={}){return this.buffer("query",e,t)}mutation(e,t={}){return this.buffer("mutation",e,t)}buffer(e,r,s){return new Promise((a,i)=>{this.buffers[e][t("alias")]={query:r,decls:s,resolve:a,reject:i},this.timerIds[e]||(this.timerIds[e]=setTimeout(()=>{this.flush(e)},this.wait))})}flush(e){s(e,this.buffers[e],this.handle),this.buffers[e]={},this.timerIds[e]=null}},e}({});
